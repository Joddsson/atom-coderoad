function globals(){global.coderoad={dir:atom.project.rootDirectories[0].path}}function findEditor(){var o=atom.workspace.getActiveTextEditor();return o?getEditorCount>1e3?void console.log("Failed to find active editor"):(getEditorCount=0,o):(getEditorCount+=1,void setTimeout(function(){return findEditor()},10))}function getEditor(){return new Promise(function(o,t){o(findEditor())})}function packageDir(o){return global.coderoad.tutorialDir=path.join(global.coderoad.dir,"node_modules",o),path.join(global.coderoad.dir,"node_modules",o)}function open(o,t){atom.workspace.open(o,t)}function set(o){getEditor().then(function(t){t.setText(o),t.insertNewline(),t.moveToBottom()})}function insert(o,t){t=Object.assign(t,{autoIndent:!0}),getEditor().then(function(e){e.moveToBottom(),e.insertText(o,t),e.insertNewline(),e.moveToBottom()})}function closeAllPanels(){var o=atom.workspace.getTextEditors();o.forEach(function(o){o.destroy()})}function quit(){}var path=require("path");exports.globals=globals;var getEditorCount=0;exports.findEditor=findEditor,exports.getEditor=getEditor,exports.packageDir=packageDir,exports.open=open,exports.set=set,exports.insert=insert,exports.closeAllPanels=closeAllPanels,exports.quit=quit;