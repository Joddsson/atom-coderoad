function findEditor(){var t=atom.workspace.getActiveTextEditor();return t?getEditorCount>250?void console.log("Failed to find active editor"):(getEditorCount=0,t):(getEditorCount+=1,void setTimeout(function(){return findEditor()}))}function getEditor(){return new Promise(function(t,o){t(findEditor())})}function dir(){return atom.project.rootDirectories[0].path}function packageDir(t){return path.join(dir(),"node_modules",t)}function open(t,o){atom.workspace.open(t,o)}function set(t){getEditor().then(function(o){o.setText(t)})}function insert(t,o){getEditor().then(function(e){console.log(e),e.moveToBottom(),e.insertNewlineBelow(),e.insertText(t,o),e.moveToBottom()})}function closeAllPanels(){var t=atom.workspace.getTextEditors();t.forEach(function(t){t.destroy()})}function quit(){}var path=require("path"),getEditorCount=0;exports.getEditor=getEditor,exports.dir=dir,exports.packageDir=packageDir,exports.open=open,exports.set=set,exports.insert=insert,exports.closeAllPanels=closeAllPanels,exports.quit=quit;