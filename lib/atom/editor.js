function setAtomGlobals(){if(atom.project.rootDirectories.length>0)global.coderoad.dir=atom.project.rootDirectories[0].path;else{var t="Please create a new Atom project. File > Open";alert(t),console.log(t),global.coderoad.dir=!1}}function findEditor(){var t=atom.workspace.getActiveTextEditor();return t?getEditorCount>1e3?void console.log("Failed to find active editor"):(getEditorCount=0,t):(getEditorCount+=1,void setTimeout(function(){return findEditor()},10))}function getEditor(){return new Promise(function(t,o){t(findEditor())})}function open(t,o){return atom.workspace.open(t,o),!0}function set(t){getEditor().then(function(o){o.setText(t),o.insertNewline(),o.moveToBottom(),o.save()})}function insert(t,o){o=Object.assign(o,{autoIndent:!0}),getEditor().then(function(e){e.moveToBottom(),e.insertText(t,o),e.insertNewline(),e.moveToBottom(),e.save()})}function closeAllPanels(){var t=atom.workspace.getTextEditors();t.forEach(function(t){t.destroy()})}function quit(){}exports.setAtomGlobals=setAtomGlobals;var getEditorCount=0;exports.findEditor=findEditor,exports.getEditor=getEditor,exports.open=open,exports.set=set,exports.insert=insert,exports.closeAllPanels=closeAllPanels,exports.quit=quit;