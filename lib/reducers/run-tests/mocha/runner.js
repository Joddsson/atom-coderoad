function runner(e){var r=_.flatten(e),t={cwd:global.coderoad.dir};null==t.env&&(t.env=Object.create(process.env)),t.env.ATOM_SHELL_INTERNAL_RUN_AS_NODE=1,t.env.DIR=global.coderoad.dir,t.env.TUTORIAL_DIR=global.coderoad.tutorialDir;var o="darwin"===process.platform?path.resolve(process.resourcesPath,"..","Frameworks","Atom Helper.app","Contents","MacOS","Atom Helper"):process.execPath,n=spawn(o,["/usr/local/bin/mocha","--bail","--reporter="+path.join(__dirname,"reporter")].concat(r),t);n.stdout.on("data",function(r){var t=/@@@CodeRoad Results@@@/,o=t.exec(r),n={},s="";if(o){var l=r.toString().substring(0,o.index);if(l.length){var a=l.substring(0,l.length/2),i=l.substring(l.length/2,l.length),c="";c=a===i?a:l,handle_test_result_1.logToConsole(c)}else console.log("Error with test",l);s=r.toString().substring(o.index+22),n=JSON.parse(s)}else console.log("Error with test",r);handle_test_result_1.handleTestResult(n,e)}),n.stderr.on("error",function(e){console.log("test error",e)}),n.on("close",function(e){1===e&&console.error("Error running test")})}var path=require("path"),handle_test_result_1=require("../handle-test-result"),_=require("lodash"),spawn=require("child_process").spawn;Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=runner;