function getCommand(t){var e=t.substring(0,t.indexOf("("));return e.length?e:void console.log("Error loading editor action command ",t)}function getParams(t){var e=getCommand(t),o=t.substring(e.length+1,t.length-1);return o.length?(o=parser_1.parseParams.getParams(o),console.log(o),o):(console.error("Error loading editor action params ",t),"")}function createObjectFromKeyValString(t){for(var e=t.split(/[:,]/),o={},r=0;r<e.length;r+=2){var n=e[r].trim(),i=e[r+1].trim();i=i.match(/^["'].+["']$/)?i.substring(1,i.length-1):JSON.parse(i),o[n]=i}return o}function getOptions(t){var e=t.match(/\{(.+)?\}/),o={},r=t;return e&&(o=createObjectFromKeyValString(e[1]),r=t.split(/, ?{/)[0]),{options:o,param:r}}function editorActions(t){return new Promise(function(e,o){var r=getCommand(t),n=getParams(t);switch(r){case EditorAction.open:var i=getOptions(n[0]),a=i.param,s=i.options;1===n.length&&(Editor.open(a,s),console.log("open"),setTimeout(function(){e()}));break;case EditorAction.set:if(1===n.length){var c=n[0];setTimeout(function(){Editor.set(c),console.log("set"),e(!0)})}break;case EditorAction.insert:if(1===n.length){var c=n[0];setTimeout(function(){Editor.insert(c,{}),console.log("insert"),e(!0)})}break;default:console.log("Invalid editor action command"),o(!1)}})["catch"](function(t){console.error("Error with editor",t)})}var Editor=require("../../atom/editor"),parser_1=require("./parser"),EditorAction={open:"open",set:"set",insert:"insert"};exports.getCommand=getCommand,exports.getParams=getParams,exports.getOptions=getOptions,exports.editorActions=editorActions;