function getCommand(t){var r=t.substring(0,t.indexOf("("));return r.length?r:void console.log("Error loading editor action command ",t)}function getParams(t){var r=getCommand(t),o=t.substring(r.length+1,t.length-1);return o.length?o.split(", ").map(function(t){return t||console.log("Error loading editor action param ",t),t=t.substring(1,t.length-1)}):void console.log("Error loading editor action params ",t)}function createObjectFromKeyValString(t){for(var r=t.split(/[:,]/),o={},e=0;e<r.length;e+=2){var n=r[e].trim(),i=r[e+1].trim();i=i.match(/^["'].+["']$/)?i.substring(1,i.length-1):JSON.parse(i),o[n]=i}return o}function getOptions(t){var r=t.match(/\{(.+)?\}/),o={},e=t;return r&&(o=createObjectFromKeyValString(r[1]),e=t.split(/, ?{/)[0]),{options:o,param:e}}function editorActions(t){var r=getCommand(t),o=getParams(t);switch(r){case EditorAction.open:var e=getOptions(o[0]),n=e.param,i=e.options;if(1===o.length)return Editor.open(n,i),!0;break;case EditorAction.set:if(1===o.length){var a=o[0];return Editor.set(a),!0}break;case EditorAction.insert:if(1===o.length){var s=getOptions(o[0]),a=s.param,g=s.options;return Editor.insert(a,g),!0}break;default:return console.log("Invalid editor action command"),!1}}var Editor=require("../../atom/editor"),EditorAction={open:"open",set:"set",insert:"insert"};exports.getCommand=getCommand,exports.getParams=getParams,exports.getOptions=getOptions,exports.editorActions=editorActions;